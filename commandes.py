import discord
import json
from discord.ext import commands

with open("configue.json", "r") as file:
    key = json.load(file)

with open(key["configpath"], "r") as file:
    data = json.load(file)

token = key["TOKEN"]

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.command()
@commands.has_permissions(manage_channels=True)  # V√©rifie que l'utilisateur a les permissions requises
async def silence(ctx, member: discord.Member, duration: int, unit: str = "minutes", *, reason=None):
    """R√©duit au silence un utilisateur dans tous les salons pour une dur√©e d√©finie."""
    # Conversion de la dur√©e en secondes
    time_units = {"minutes": 60, "hours": 3600, "days": 86400}
    if unit not in time_units:
        await ctx.send("‚ùå Unit√© de temps invalide. Utilisez 'minutes', 'heures' ou 'jours'.")
        return
    
    duration_in_seconds = duration * time_units[unit]
    if duration_in_seconds <= 0:
        await ctx.send("‚ùå La dur√©e doit √™tre un nombre positif.")
        return

    # R√©duire l'utilisateur au silence dans tous les salons
    for channel in ctx.guild.channels:
        try:
            await channel.set_permissions(member, send_messages=False, reason=reason)
        except discord.Forbidden:
            await ctx.send(f"‚ùå Je n'ai pas les permissions n√©cessaires pour modifier les permissions dans le salon {channel.name}.")
            return

    await ctx.send(f"üîá {member.mention} a √©t√© r√©duit au silence pour {duration} {unit} pour la raison : {reason if reason else 'Aucune raison donn√©e.'}")

    # Attendre la dur√©e d√©finie
    await asyncio.sleep(duration_in_seconds)

    # Restaurer les permissions apr√®s la dur√©e
    for channel in ctx.guild.channels:
        try:
            await channel.set_permissions(member, overwrite=None, reason="Fin de la dur√©e de silence.")
        except discord.Forbidden:
            await ctx.send(f"‚ö†Ô∏è Impossible de restaurer les permissions dans le salon {channel.name}.")

    await ctx.send(f"üîä {member.mention} peut de nouveau parler.")

@silence.error
async def silence_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå Vous n'avez pas les permissions n√©cessaires pour utiliser cette commande.")
    elif isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("‚ùå Veuillez sp√©cifier un membre, une dur√©e et une unit√© de temps.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùå Veuillez mentionner un utilisateur valide et fournir une dur√©e correcte.")
    else:
        await ctx.send("‚ùå Une erreur est survenue.")

bot.run(token=token)